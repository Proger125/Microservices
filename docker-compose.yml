version: "3.9"
services:

  mp3app:
    container_name: mp3app
    image: mp3_image:latest
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - mp3_db
      - songapp
    environment:
      - SPRING_PROFILES_ACTIVE=dev

  mp3_db:
    container_name: mp3_db
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "resourcedb"
      POSTGRES_USER: "resourceuser"
      POSTGRES_PASSWORD: "resourcepassword"
    volumes:
      - resourcedb-data:/var/lib/postgresql/data
      - ./script/sql/mp3:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U resourceuser -d resourcedb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  songapp:
    container_name: songapp
    image: song_image:latest
    build:
      context: .
    ports:
      - "8081:8081"
    depends_on:
      - song_db
    environment:
      - SPRING_PROFILES_ACTIVE=dev

  song_db:
    container_name: song_db
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "songdb"
      POSTGRES_USER: "songuser"
      POSTGRES_PASSWORD: "songpassword"
    volumes:
      - songdb-data:/var/lib/postgresql/data
      - ./script/sql/song:/docker-entrypoint-initdb.d/
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U songuser -d songdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  pgadmin:
    container_name: pgadmin_resource_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "alexdyachenka@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "159753sa"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

volumes:
    resourcedb-data:
    songdb-data:
    pgadmin-data: